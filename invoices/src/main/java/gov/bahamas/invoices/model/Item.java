/*
 * Invoices
 * <table><thead><tr><th>Version</th><th>Author</th><th>Date</th><th>Description</th><th>Revision by</th></tr></thead><tbody><tr><td>1.0.0</td><td>Enok</td><td>2022-01-10</td><td>Creates a new invoice (POST)</td><td> - </td></tr></tbody></table>
 *
 * The version of the OpenAPI document: 1;2022-01-10
 * Contact: enok.jesus@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package gov.bahamas.invoices.model;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import gov.bahamas.invoices.model.Tax;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Invoice item.
 */
@ApiModel(description = "Invoice item.")
@JsonPropertyOrder({
  Item.JSON_PROPERTY_NAME,
  Item.JSON_PROPERTY_DESCRIPTION,
  Item.JSON_PROPERTY_UNIT_PRICE,
  Item.JSON_PROPERTY_QUANTITY,
  Item.JSON_PROPERTY_UNIT,
  Item.JSON_PROPERTY_DISCOUNT,
  Item.JSON_PROPERTY_TAX,
  Item.JSON_PROPERTY_DISCOUNT_AMOUNT,
  Item.JSON_PROPERTY_SUBTOTAL,
  Item.JSON_PROPERTY_TAX_AMOUNT,
  Item.JSON_PROPERTY_TOTAL
})
@JsonTypeName("item")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Item {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_UNIT_PRICE = "unit_price";
  private Double unitPrice;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public static final String JSON_PROPERTY_DISCOUNT = "discount";
  private Double discount = 0.0d;

  public static final String JSON_PROPERTY_TAX = "tax";
  private Tax tax;

  public static final String JSON_PROPERTY_DISCOUNT_AMOUNT = "discount_amount";
  private Double discountAmount;

  public static final String JSON_PROPERTY_SUBTOTAL = "subtotal";
  private Double subtotal;

  public static final String JSON_PROPERTY_TAX_AMOUNT = "tax_amount";
  private Double taxAmount;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Double total;


  public Item name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the item. Must be unique.
   * @return name
  **/
  @NotNull
  @ApiModelProperty(example = "Item Name", required = true, value = "Name of the item. Must be unique.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Item description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Item’s description.
   * @return description
  **/
  @NotNull
  @ApiModelProperty(example = "Item Description", required = true, value = "Item’s description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Item unitPrice(Double unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Item’s unit price. Must be a number equal or greater than 0.0.
   * minimum: 0.0
   * @return unitPrice
  **/
  @NotNull
 @DecimalMin("0.0")  @ApiModelProperty(example = "100.0", required = true, value = "Item’s unit price. Must be a number equal or greater than 0.0.")
  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getUnitPrice() {
    return unitPrice;
  }


  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }


  public Item quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity. Must be a number equal or greater than 0.
   * minimum: 0
   * @return quantity
  **/
  @NotNull
 @Min(0)  @ApiModelProperty(example = "5", required = true, value = "Quantity. Must be a number equal or greater than 0.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public Item unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * The item unit of measure.
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The item unit of measure.")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    this.unit = unit;
  }


  public Item discount(Double discount) {
    
    this.discount = discount;
    return this;
  }

   /**
   * The item discount percentage(%). Defaults to 0.0. Must be a value between 0.0 and 100.0 inclusive.
   * minimum: 0.0
   * @return discount
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.0")  @ApiModelProperty(example = "0.0", value = "The item discount percentage(%). Defaults to 0.0. Must be a value between 0.0 and 100.0 inclusive.")
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDiscount() {
    return discount;
  }


  public void setDiscount(Double discount) {
    this.discount = discount;
  }


  public Item tax(Tax tax) {
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Tax getTax() {
    return tax;
  }


  public void setTax(Tax tax) {
    this.tax = tax;
  }


   /**
   * Get discountAmount
   * @return discountAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.0", value = "")
  @JsonProperty(JSON_PROPERTY_DISCOUNT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDiscountAmount() {
    return discountAmount;
  }




   /**
   * Get subtotal
   * @return subtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "500.0", value = "")
  @JsonProperty(JSON_PROPERTY_SUBTOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSubtotal() {
    return subtotal;
  }




   /**
   * Get taxAmount
   * @return taxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25.0", value = "")
  @JsonProperty(JSON_PROPERTY_TAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTaxAmount() {
    return taxAmount;
  }




   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "525.0", value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotal() {
    return total;
  }




  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o, false, null, true);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

