openapi: 3.0.0
info:
  title: Clients
  description: <table><thead><tr><th>Version</th><th>Author</th><th>Date</th><th>Description</th><th>Revision by</th></tr></thead><tbody><tr><td>1.0.0</td><td>Enok</td><td>2022-01-10</td><td>Creates a new invoice (POST)</td><td> - </td></tr></tbody></table>
  version: 1;2022-01-10
  contact:
    name: Enok
    email: enok.jesus@gmail.com
security:
  - api_key: []
paths:
  /invoices.json:
    post:
      summary: 'Creates a new invoice.'
      description: |-
        To try it out use api_key: 8b90b198bb858c0e047ee107175c51cd9a3d25a2
      parameters:
        - name: api_key
          in: query
          description: Consumer api key.
          required: true
          schema:
            type: string
      tags:
        - /invoices.json
      responses:
        '201':
          description: Business objects that represents an Invoice.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoicePostResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoicePostRequest'
        required: true
servers:
  - url: https://enok.app.invoicexpress.com
components:
  securitySchemes:
    api_key:
      type: apiKey
      in: query
      name: api_key
  schemas:
    invoicePostResponse:
      description: Business objects that represents a request to create an Invoice.
      type: object
      required:
        - invoice
      properties:
        invoice:
          $ref: '#/components/schemas/invoice'
      xml:
        name: xml
    invoicePostRequest:
      description: Business objects that represents a response from Invoice creation.
      type: object
      required:
        - invoice
      properties:
        invoice:
          $ref: '#/components/schemas/invoice'
      xml:
        name: xml
    invoice:
      description: Business object that represents an Invoice.
      type: object
      properties:
        id:
          description: Id auto-generated for a Client.
          type: integer
          readOnly: true
          example: 81967052
        status:
          description: Represents the Invoice current status.
          type: string
          readOnly: true
          example: draft
        archived:
          description: If the Invoice was archived.
          type: boolean
          readOnly: true
          example: false
        type:
          description: The type of document created.
          type: string
          readOnly: true
          example: Invoice
        date:
          description: "The invoice date. Must be in format dd/mm/yyyy ex.: 03/12/2015. If format is invalid, date will be set to current date."
          type: string
          format: date
          pattern: "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$"
          example: 03/12/2017
        due_date:
          description: "The invoice due date. Must be in format dd/mm/yyyy ex.: 03/12/2015. If format is invalid, date will be set to current date."
          type: string
          format: date
          pattern: "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$"
          example: 03/12/2017
        reference:
          description: The invoice purchase order reference field.
          type: string
          example: null
        observations:
          description: Invoice observations, these will be printed with the invoice.
          type: string
          example: null
        retention:
          description: Withholding tax percentage (%). Must be a number between 0 and 99.99.
          type: number
          minimum: 0
          maximum: 99.99
          example: null
        permalink:
          description: Permalink.
          type: string
          readOnly: true
          example: https://www.app.invoicexpress.com/documents/81967052fb50a36404eca4a16ead6101a818d87f249de9bf

    preferred_contact:
      description: The preferred contact details.
      type: object
      properties:
        name:
          description: Name of the preferred contact on your new client.
          type: string
          example: 'Bruce Norris'
        email:
          description: Email of the preferred contact on your new client.
          type: string
          example: email@invoicexpress.com
        phone:
          description: Phone number of the preferred contact on your new client.
          type: string
          example: '213456789'
    errorArray:
      description: Array of errors
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
    error:
      description: Object that represents a http error
      type: object
      required:
        - error
      properties:
        error:
          description: Error string.
          type: string
      xml:
        name: xml
  responses:
    '401':
      description: Acess Denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorArray'
          example:
            errors: [
                error: 'Invalid API key'
            ]
        application/xml:
          schema:
            $ref: '#/components/schemas/errorArray'
        application/javascript:
          schema:
            $ref: '#/components/schemas/errorArray'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorArray'
          example:
            errors: [
                error: "There's an ongoing document creation with the provided UID"
            ]
        application/xml:
          schema:
            $ref: '#/components/schemas/errorArray'
        application/javascript:
          schema:
            $ref: '#/components/schemas/errorArray'
    '422':
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorArray'
          example:
            errors: [
                error: 'Name is a required field'
            ]
        application/xml:
          schema:
            $ref: '#/components/schemas/errorArray'
        application/javascript:
          schema:
            $ref: '#/components/schemas/errorArray'
